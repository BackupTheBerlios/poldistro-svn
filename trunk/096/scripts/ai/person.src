/////////////////////////////////////////////////////////////////////////////
//
// Simple Townperson AI. responds to a few keywords and barks out
// some crappy responses
//
// He also runs like heck if you try to attack him :)
//
// TODO: put all keyword / response text in a cfg file.
//
/////////////////////////////////////////////////////////////////////////////

use npc;
use os;
use uo;

include "include/eventID";
include "include/sysEvent";
include ":npcutils:randName";
include ":npcutils:vetement";
include ":npcutils:speech";
include ":npcutils:anchors";
include "include/dist";
include "ai/main/loot";
include ":begging:begging";

const HALT_THRESHOLD := 2; // how close before he barks?

var me := Self();
  start_script(":npcutils:NPCKeeper", me);

program CastleGuard()
  drop_anchor();
  EnableEvents( SYSEVENT_SPEECH + SYSEVENT_ENGAGED + SYSEVENT_DISENGAGED + SYSEVENT_DAMAGED );
  EnableEvents( SYSEVENT_ENTEREDAREA + SYSEVENT_LEFTAREA, HALT_THRESHOLD );
  EnableEvents( SYSEVENT_OPPONENT_MOVED );
  if (GetObjProperty(me, "frozen"))
        me.frozen := 1;
  endif
  SetWarMode( 0 );
  set_priority(10);
  var ev;
  var looter := GetObjProperty( me, "looter" );
  var next_wander := ReadGameClock() + 10;
  while (1)
    ev := os::wait_for_event( 120 );
    case (ev.type)
      SYSEVENT_SPEECH:  var tspeech := process_text(ev.text, "default","default");
                        if (tspeech)
                          say(tspeech);
                        endif
      SYSEVENT_ENGAGED: say("Aaahhh! Help! Help!  I'm being oppressed!");
                        Run( ev.source );
      SYSEVENT_DAMAGED: say( "Owie! Aaaagh!  That's worse than a bee sting!" );
                        if (ev.source)
                          Run( ev.source );
                        else
                          say( "What sinister force is this!" );
                        endif
      SYSEVENT_ENTEREDAREA:
      SYSEVENT_LEFTAREA:
    endcase
    if (ReadGameClock() >= next_wander)
      begpurse(me);
      wander();
      if(looter)
        grabloot();
      endif
      next_wander := ReadGameClock() + 10;
    endif
  endwhile
endprogram

function Run( opponent )
  TurnAwayFrom( opponent );
  DisableEvents( SYSEVENT_ENTEREDAREA + SYSEVENT_LEFTAREA );
  var waittime;
  outer:
  while (opponent && !opponent.dead)
    waittime := OpenDistance( opponent ) * 15;
    var ev := wait_for_event( waittime );
    case (ev.type)
      SYSEVENT_SPEECH:
      SYSEVENT_DISENGAGED:     if (ev.source.serial == opponent.serial)
                                 say( "Whew!" );
                                 break outer;
                               endif
      SYSEVENT_ENGAGED:
      SYSEVENT_DAMAGED:        if (ev.source)
                                 if (ev.source.serial != opponent.serial)
                                   say( "Ack! Leave me alone!" );
                                 else
                                   if (ev.type == "damage")
                                     say("Ouch! Heeelp!");
                                   endif
                                 endif
                               endif
      SYSEVENT_OPPONENT_MOVED:
      SYSEVENT_ENTEREDAREA:
      SYSEVENT_LEFTAREA:
    endcase
  endwhile
  EnableEvents( SYSEVENT_ENTEREDAREA + SYSEVENT_LEFTAREA, HALT_THRESHOLD );
  SetWarMode( 0 );
endfunction

function OpenDistance( opponent )
  case (Distance( me, opponent ))
    10:      return 1;
    default: RunAwayFrom( opponent );
             return 0;
  endcase
endfunction

function look_around()
  return 0;
endfunction

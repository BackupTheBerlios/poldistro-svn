// $Id$

use os;
use uo;

include ":attributes:attributeConstants";
include ":attributes:attributes";
include ":attributes:skillCheck";
include "include/eventID";
include ":itemutils:canAccess";
include ":musicianship:bard";

program bard_provoke(who)

	EraseObjProperty(who, "IsMeditating");

	if(Cint(GetObjProperty(who, "#LastMusic")) > ReadGameClock())
		SendSysMessage(who, "You must wait a moment before playing again.");
		return 0;
	endif

	SetObjProperty(who, "#LastMusic", Cint(ReadGameClock() + 2));

	var instrument := findInstrument(who);
	if(!instrument)
		return 0;
	endif
	if( instrument.container != who.backpack )
		SendSysMessage( who, "That instrument is not in your backpack.");
		return 0;
	endif
	if(!can_access(who, instrument))
		return 0;
	endif

	SendSysMessage(who, "Select the creature to provoke.");
	var thetarg := Target(who, TGTOPT_CHECK_LOS +  TGTOPT_HARMFUL);
	if( !thetarg.isA(POLCLASS_MOBILE) || thetarg.acctname || thetarg.frozen )
		SendSysMessage(who, "Cancelled");
		return 0;
	endif

	if(distance(who, thetarg) > 10)
		SendSysMessage(who, "The target is too far away.");
		return 0;
	endif

	var barding_difficulty := -1;
	if( thetarg.npctemplate )
		barding_difficulty := figureBardDifficulty(who, thetarg, instrument, PROVOCATION);
	endif

	if ( !isBardable(who, thetarg, PROVOCATION, barding_difficulty) )
		PrintTextAbovePrivate(thetarg, "You have no chance to provoke that creature!", who);
		return 0;
	endif

	if( bardSkillCheck(who, instrument, PROVOCATION, barding_difficulty) )
		var ev := struct;
		ev.+ type;
		ev.+ source;

		SendSysMessage(who, "Select a target to provoke this onto.");
		var newtarg := Target(who, (TGTOPT_NOCHECK_LOS + TGTOPT_HARMFUL) );
		if(newtarg == thetarg)
			SendSysMessage(who, "You can't provoke something onto itself!");
			return 0;
		endif
		if( (distance(thetarg, newtarg) > 10) || (distance(who, newtarg) > 10) )
			SendSysMessage(who, "The target is too far away.");
			return 0;
		endif
		if( !newtarg.isA(POLCLASS_MOBILE) || newtarg.frozen )
			SendSysMessage(who, "You can't provoke the creature onto that!");
			return 0;
		endif
		barding_difficulty := -1;
		if( newtarg.npctemplate )
			barding_difficulty := figureBardDifficulty(who, newtarg, instrument, PROVOCATION);
		endif
		if( bardSkillCheck(who, instrument, PROVOCATION, barding_difficulty, 0, ADV_DISABLE) )
			SetObjProperty(who, "#LastMusic", Cint(ReadGameClock() + 3));
			SendSysMessage(who, "You provoke " + thetarg.name + " to attack " + newtarg.name + ".");
			ev.source := newtarg;
			if(newtarg.warmode)
				ev.type := EVID_PEACEMADE;
				ev.+ length;
				ev.length := 1;
				SendEvent(thetarg, ev);
				SendEvent(newtarg, ev);
				sleep(1);
			endif
			ev.type := EVID_DAMAGED;
			SendEvent(thetarg, ev);
			ev.source := thetarg;
			SendEvent(newtarg, ev);

			// Set CProp so death script can give karma/fame.
			SetObjProperty(thetarg, "#Provoked", {who.name, who.serial});
		else
			SetObjProperty(who, "#LastMusic", Cint(ReadGameClock() + 7));
			if( barding_difficulty == -1 )
				barding_difficulty := 50;
			endif
			if( RandomInt( barding_difficulty) > AP_GetSkill(who, PROVOCATION) )
				ev.source := who;
				if( thetarg.warmode )
					ev.type := EVID_PEACEMADE;
					ev.+ length;
					ev.length := 1;
					SendEvent(thetarg, ev);
					sleep(1);
				endif
				ev.type := EVID_DAMAGED;
				PrintTextAbovePrivate(thetarg, "You enrage " + thetarg.name + "!", who);
				SendEvent(thetarg, ev);
			else
				SendSysMessage(who, "You fail in your attempt to provoke the creatures.");
			endif
		endif
	endif

endprogram
// $Id$

use uo;
use basic;
use os;

include "include/client";
include "include/sound";
include ":attributes:attributes";


program tracking(who)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
//  UnloadConfigFile(":tracking:tracking");
  if(SkillCheck(who, TRACKING, -1) >0)
    var tracker := ReadGameClock();
    SetObjProperty(who, "TrackingCounter", tracker);
    var range := CInt((AP_GetSkill(who, TRACKING)/3));
    var nearby := ListMobilesNearLocation(who.x, who.y, who.z, range, who.realm);
    if(nearby.size() == 1 && nearby[1].serial == who.serial)
      SendSysMessage(who, "There don't seem to be any creatures nearby.");
      return;
    endif
    var track_list := CreateMenu("Select a category.");
    var critter_ids := dictionary {};
    var menucount := 0;
    var config := ReadConfigFile(":tracking:tracking");
    var typearray := {};
    var typelist := dictionary {"animal" -> {}, "monster" -> {}, "person" -> {}};
    var animal, creature, person, tiletype;
    foreach mobile in nearby
      if((mobile != who) && (!mobile.dead) && (!mobile.cmdlevel))
          var elem := FindConfigElem(config, mobile.graphic);
          if(elem)
            tiletype := GetConfigString(elem, "type");
            case(lower(tiletype))
              "animal":    typelist["animal"].append(mobile);
              "monster": typelist["monster"].append(mobile);
              "person":    typelist["person"].append(mobile);
            endcase
          endif
      endif
    endforeach
    if(typelist["animal"].size() > 0)
      AddMenuItem(track_list, 0x20cf, "Animals");
    endif
    if(typelist["monster"].size() > 0)
      AddMenuItem(track_list, 0x20d9, "Creatures");
    endif
    if(typelist["person"].size() > 0)
      AddMenuItem(track_list, 0x2106, "People");
    endif
    var thetarget := SelectMenuItem2(who, track_list);
    var listtype := "";
    case(cint(thetarget.graphic))
      8454: listtype := "person";
      8399: listtype := "animal";
      8409: listtype := "monster";
    endcase
    if(!listtype)
      SendSysMessage(who, "Cancelled.");
      return;
    endif
    var track_menu := CreateMenu("Select a creature.");
    var ttype := "";
    foreach mobile in (typelist[listtype])
      if((mobile) && (mobile != who) && (!mobile.dead) && (!mobile.cmdlevel))
        var elem := FindConfigElem(config, mobile.graphic);
        if(elem)
          ttype := lower(GetConfigString(elem, "type"));
          if(ttype == listtype)
            menucount := menucount + 1;
            critter_ids[menucount] := mobile.serial;
            tiletype := GetConfigInt(elem, "tile");
            AddMenuItem(track_menu, tiletype, mobile.name);
          endif
        endif
      endif
    endforeach
    if(menucount > 0)
      thetarget := SelectMenuItem2(who, track_menu);
      if(!thetarget)
        SendSysMessage(who, "Cancelled.");
        return;
      endif
      var critter := SystemFindObjectBySerial(critter_ids[(thetarget.index)], SYSFIND_SEARCH_OFFLINE_MOBILES);
      SetObjProperty( who, "#trackingtimeout", ReadGameClock()+40 );
      Detach();
      var timer := 0;
      while((Distance(who, critter) <= range) && (critter.dead == 0) && (timer <= 12)&& (tracker == GetObjProperty(who,"TrackingCounter")))
        timer := timer + 1;
        var dir := Get_direction(who, critter);
        if(dir == "nearby")
          SendSysMessage(who, critter.name + " is " + dir + ".");
        else
          SendSysMessage(who, critter.name + " is to the " + dir + ".");
        endif
        sleep(5);
      endwhile
      SendSysMessage(who, "You have lost your quarry.");
      EraseObjProperty(who, "#trackingtimeout");
    endif
  else
    SendSysMessage(who, "You fail to find any creatures nearby.");
  endif
endprogram

function Get_direction(who, critter)
  var ns_desc := "";
  var ew_desc := "";
  var thedesc;
  if(critter.y < who.y)
    ns_desc := "north";
  elseif(critter.y > who.y)
    ns_desc := "south";
  endif
  if(critter.x < who.x)
    ew_desc := "west";
  elseif(critter.x > who.x)
    ew_desc := "east";
  endif
  if(ns_desc == "" && ew_desc == "")
    thedesc := "nearby";
  else
    thedesc := ns_desc + ew_desc;
  endif
  return thedesc;
endfunction

/* $Id$
 *
 */

use uo;
use os;
use math;

include "include/canAccess";
include "fishingFunctions";
include ":attributes:include/attributeConstants";
include ":attributes:include/attributes";
include "include/objtype";

program use_FishNets(who, fishnet)

	EraseObjProperty(who, "IsMeditating");
	EraseObjProperty(who, "HealTimer");

	if( !can_access(who, fishnet) )
		return 0;
	endif
	if( fishnet.movable == 0 )
		SendSysMessage(who, "You cannot use that.");
		return 0;
	endif
	if( !ReserveItem(fishnet) )
		return 0;
	endif
	if( !(fishnet in EnumerateItemsInContainer(who.backpack)) )
		SendSysMessage(who, "That item is not in your backpack.");
		return 0;
	endif

	var targetsquare := TargetCoordinates(who);
	if( !targetsquare )
		return 0;
	endif

	var locinfo:= GetMapInfo( targetsquare.x, targetsquare.y );
	if( IsValidFishingSpot(who, targetsquare, locinfo) )
		PerformAction(who, 0x9);
		var newsplash := CreateItemAtLocation(targetsquare.x, targetsquare.y, targetsquare.z,  0x352d, 1);
		newsplash.movable := 0;
		PlaySoundEffect(who, 0x240);
		sleepms(400);
		set_critical(1);
		DestroyItem(newsplash);
		set_critical(0);
		sleepms(2);
		var rand:= RandomInt(200);
		if( rand == 0 )
			SendSysMessage(who,"Your dreams of a good catch have been answered!");
			CreateItemInContainer(who.backpack, UOBJ_FISH_START, 5);
		endif
		if(farout(who))
			var chance := RandomInt(6)+1;
			case(chance)
				1: CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
				2: CreateNpcFromTemplate( "waterelemental", targetsquare.x, targetsquare.y, targetsquare.z );
				3: CreateNpcFromTemplate( "walrus", targetsquare.x, targetsquare.y, targetsquare.z );
				4: CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
				5: CreateNpcFromTemplate( "waterelemental", targetsquare.x, targetsquare.y, targetsquare.z );
				6: CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
			endcase
			var myskill := AP_GetSkill(who, FISHING);
			if(myskill <= 50)
				CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
			elseif(myskill <= 75)
				CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
				CreateNpcFromTemplate( "waterelemental", targetsquare.x, targetsquare.y, targetsquare.z );
			elseif(myskill <= 99)
				CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
				CreateNpcFromTemplate( "waterelemental", targetsquare.x, targetsquare.y, targetsquare.z );
				CreateNpcFromTemplate( "walrus", targetsquare.x, targetsquare.y, targetsquare.z );
			elseif(myskill >= 100)
				CreateNpcFromTemplate( "seaserpent", targetsquare.x, targetsquare.y, targetsquare.z );
				CreateNpcFromTemplate( "waterelemental", targetsquare.x, targetsquare.y, targetsquare.z );
				CreateNpcFromTemplate( "kraken", targetsquare.x, targetsquare.y, targetsquare.z );
			endif
			SendSysMessage(who, "You appear to have caught something rather unpleasent!");
		else
			SendSysMessage(who, "You can't seem to find anything out here.");
		endif
		DestroyItem(fishnet);
	endif

endprogram


function lostbag(who)

	var regloop, regcount,reg;
	var fishing := GetEffectiveSkill(who);
	var gold := fishing * (RandomInt(9)+1);
	var bag := CreateItemInContainer(who.backpack,0x0E76, 1);
	if(!bag)
		bag := CreateItemAtLocation(0x0E76,who.x,who.y,who.z,1);
	endif

	for(regloop:=1;regloop<=5;regloop:=regloop+1)
		regcount := RandomInt( (fishing-1) );
		reg := RandomInt( 0x0f78 - 0x0f91 ) + 0x0f78;
		CreateItemInContainer(bag,reg,regcount);
	endfor

	return 1;

endfunction
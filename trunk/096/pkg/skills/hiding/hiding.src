// //$Id$

////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  name:    hiding.src - Skill Script
//  version: 1.0
//  author:  MuadDib
//
//  Purpose: Follows OSI methodology for the hiding skill with a bit of customness. If player
//		is in war mode, it kicks them out of it before going on. The distances are not OSI
//		specific however, but thrown in as seen fit.
//
////////////////////////////////////////////////////////////////////////////////////////////////////
use uo;

include ":attributes:attributeConstants";
include ":attributes:attributes";
include ":attributes:skillCheck";

program skill_Hide(who)

	EraseObjProperty(who, "IsMeditating");
	EraseObjProperty(who, "HealTimer");

	if( who.warmode )
		who.SetWarMode(0);
	endif
	var my_range := my_HideRange(AP_GetSkill(who, HIDING));
	var my_attackers := ListHostiles(who, my_range, LH_FLAG_LOS);
	if( my_attackers.size() > 0 )
		PrintTextAbovePrivate(who, "You cannot hide as there are hostiles in view!", who);
		return 0;
	endif
	if( SkillCheck(who, HIDING, -1) > 0 )
		who.hidden := 1;
		if( GetObjProperty(who, "#Stealth") != 1)
			PrintTextAbovePrivate(who, "You have hidden yourself well.", who);
		endif
	else
		if( GetObjProperty(who, "#Stealth") != 1)
			PrintTextAbovePrivate(who, "You can't seem to hide here.", who);
		endif
		who.hidden := 0;
	endif

endprogram

function my_HideRange( skill )

	if( skill >= 100 )
		return 4;
	elseif( skill >= 90 )
		return 5;
	elseif( skill >= 80 )
		return 6;
	elseif( skill >= 70 )
		return 7;
	elseif( skill >= 60 )
		return 8;
	elseif( skill >= 50 )
		return 9;
	elseif( skill >= 30 )
		return 10;
	else
		return 15;
	endif

endfunction
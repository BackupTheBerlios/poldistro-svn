use uo;
use os;
use util;

include "include/client";
include ":attributes:attributes";
include "include/dist";
include "include/objtype";
include "include/startEqp";
include "util/key";
include "include/utility";
include "include/canAccess";

var startx;
var starty;
const EVID_CHECK_SPOT := 0x123456;
const OC_PID := "#orecore";

const NO_AUTO_MINE := 0;

program use_picktool(who, tool)
  EraseObjProperty(who, "IsMeditating");
  EraseObjProperty(who, "HealTimer");
  if(!can_access(who, tool))
    return;
  endif
  if(tool.movable == 0)
    SendSysMessage(who, "You cannot use that.");
    return;
  endif
  var mount := GetEquipmentByLayer(who, 25);
  if(mount)
    SendSysMessage(who,"You cannot mine while on horseback.");
    return;
  endif
  if(!ReserveItem(tool))
    return;
  endif
  var itms := EnumerateItemsInContainer(who.backpack);
  var items := {};
  var treasuremap := 0;
  var map := 0;
  foreach itm in itms
    if((itm.graphic == 0x14eb) && (GetObjProperty(itm,"level")))
      items.append(itm);
      treasuremap := 1;
    endif
  endforeach
  if(treasuremap == 0)
    SendSysMessage(who, "Select a place to mine." );
    var use_on := TargetCoordinates(who);
    if(!use_on)
      SendSysMessage(who, "Cancelled.");
	  return;
    endif
    if(!CheckLosAt(who, use_on.x, use_on.y, use_on.z))
      SendSysMessage(who, "You cannot see that.");
      return;
    endif
    var chk := CInt(GetObjProperty(who, "IsMining"));
    if(!chk)
      chk := CInt(ReadGameClock() - 10);
    endif
    if(chk >= ReadGameClock())
      SendSysMessage(who, "You must wait to perform another action.");
      return;
    endif
    SetObjProperty(who, "IsMining", ReadGameClock() + 1);
	if((coordist(who.x, who.y, use_on.x, use_on.y)) > 2 )
	  SendSysMessage(who,"That is too far away.");
	  return;
	endif
	var info := GetMapInfo(use_on.x, use_on.y, who.realm);
    if(is_minable(info.landtile, use_on.objtype))
      var checker := 0;
      startx := who.x;
      starty := who.y;
      repeat
        mount := GetEquipmentByLayer(who, 25);
        if(mount)
          SendSysMessage(who,"You cannot mine while on horseback.");
          return;
        endif
        if(!tool)
          return;
        endif
        PerformAction(who, 0x0b);
        PlaySoundEffect(who, 0x126);
        sleepms(1500);
        checker := (GetOre(who, use_on, info, tool) | NO_AUTO_MINE);
      until(checker == 1);
	else
	  SendSysMessage(who, "You cannot mine that!");
	  return;
	endif
  else
    var x;
    var y;
    var themap := 0;
    foreach itm in items
      x := GetObjProperty(itm,"chestx");
      y := GetObjProperty(itm,"chesty");
      if(x and y)
        if((who.x >= x-30) && (who.x <= x+30) && (who.y >= y-30) && (who.y <= y+30))
          themap := 1;
          map := itm;
          break;
        endif
      endif
    endforeach
    if(themap == 0)
      SendSysMessage(who, "Target a location to dig.");
      var dig := TargetCoordinates( who );
      if( dig )
        PerformAction(who, 0x0b);
        PlaySoundEffect(who, 0x126);
        sleep(1);
        SendSysMessage(who,"You dig and dig, but do not find any treasure.");
      endif
      return;
    endif
    if(GetObjProperty(map, "Solved"))
      SendSysMessage(who, "That map has already been dug up.");
      return;
    endif
    if(!ReserveItem(map))
      return;
    endif
    var chestx := GetObjProperty( map, "chestx" );
    var chesty := GetObjProperty( map, "chesty" );
    var chestz := GetWorldHeight(chestx, chesty, who.realm);
    if((!chestx) || (!chesty))
      SendSysMessage( who, "That is not a treasure map." );
      return;
    endif
    if( who.serial !=  (GetObjProperty( map, "decoder" ) ) )
      SendSysMessage( who, "You must have decoded the map to dig for it." );
      return;
    endif
    SendSysMessage(who, "Target a location to dig.");
    var dig := TargetCoordinates( who );
    if(!dig)
      SendSysMessage(who, "Cancelled.");
      return;
    endif
    if(!CheckLosAt( who, dig.x, dig.y, dig.z ) );
      SendSysMessage( who, "You can't see that." );
      return;
    endif
	PerformAction(who, 0x0b);
	PlaySoundEffect(who, 0x126);
    var range := GetRange( who );
    var distn := coordist( dig.x, dig.y, chestx, chesty );
//    var dirns := "None";
//    var direw := "None";
    var maxrange := 20;
    var mobiles := ListMobilesNearLocation(dig.x, dig.y, dig.z, 0, who.realm);
    if(distn > maxrange)
      SendSysMessage(who,"You dig and dig, but do not find any treasure.");
      return;
    elseif((distn > range) && (distn <= maxrange))
      SendSysMessage(who,"You dig and dig, but no treasure seems to be here.");
      return;
    elseif((distn < range) && (len(mobiles) > 0))
      SendSysMessage(who,"You stop digging because something is directly on top of the treasure chest.");
      return;
    else
      var i := 1;
      var mex := who.x;
      var mey := who.y;
      var parts := {};
      var chest := CreateTreasureChest( map, chestx, chesty, chestz-8 );
      chest.movable := 0;
      while((i <= 9) && (who.x == mex) && (who.y == mey))
        if((who.x != mex) && (who.y != mey))
          foreach thing in parts
            DestroyItem(thing);
          endforeach
          break;
        endif
        PerformAction(who, 0x0b);
		PlaySoundEffect(who, 0x126);
        sleep(1);
        if(i == 2)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2321, 1, who.realm);
          patch.movable := 0;
          parts.append(patch);
        elseif(i == 3)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2322, 1, who.realm);
          patch.movable := 0;
          parts.append(patch);
        elseif(i == 4)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2323, 1, who.realm);
          patch.movable := 0;
          parts.append(patch);
        elseif(i == 5)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2324, 1, who.realm);
          patch.movable := 0;
          parts.append(patch);
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
        elseif(i == 6)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2324, 1, who.realm);
          patch.movable := 0;
          parts.append(patch);
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
        elseif(i == 7)
          var patch := CreateItemAtLocation(chestx, chesty, chestz, 2324, 1, who.realm);
          patch.movable := 0;
          parts.append(patch);
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
        elseif(i == 8)
          chest.movable := 1;
          MoveItemToLocation(chest, chest.x, chest.y, chest.z+2, MOVEITEM_FORCELOCATION);
          chest.movable := 0;
          foreach thing in parts
            DestroyItem(thing);
          endforeach
        endif
        i := i + 1;
      endwhile
      if((who.x != mex) || (who.y != mey))
        SendSysMessage(who,"You must stand still while digging.");
        DestroyItem(chest);
        return;
      endif
	  var maplevel := CInt(GetObjProperty(map, "level") );
	  SetObjProperty(chest, "level", maplevel);
      SetObjProperty(chest, "trap_type", "3");
      var strength := 0;
      case (maplevel)
        1: strength :=  20;
        2: strength :=  40;
        3: strength :=  60;
        4: strength :=  80;
        5: strength := 100;
      endcase
      if ((strength == 0) || (strength == error))
        strength := 20;
      endif
      SetObjProperty(chest, "trap_strength", strength);
      chest.usescript := ":tinkering:tinkerTraps";
      var lockid := AllocLockId();
      SetObjProperty( chest, "lockid", lockid );
      chest.locked :=  1;
      chest.movable := 0;
      EraseObjProperty(map, "level");
      EraseObjProperty(map, "chestx");
      EraseObjProperty(map, "chesty");
      SetObjProperty(map, "Solved", 1);
      map.name := "a treasure map [completed by " + who.name + "]";
      var lvl := GetObjProperty( chest, "level" );
      var cfgfile := ReadConfigFile(":treasuremap:guardians");
      if(!cfgfile)
        SendSysMessage(who,"Something is wrong with this map.");
        return;
      endif
      var elem := FindConfigElem( cfgfile, lvl );
      if(!elem)
        SendSysMessage(who,"Something is wrong with this map.");
      endif
      var total := GetConfigString( elem, "total" );
      var num := GetConfigInt( elem, "num" );
      var limit := RandomDiceRoll( total );
      var rand;
      var mTemplate;
      i := 1;
      for( i := 1; i <= limit; i := i + 1 )
        rand := RandomInt( num ) + 1;
        mTemplate := GetConfigString( elem, ("creature" + rand) );
        CreateGuardian( chest, mTemplate );
      endfor
      UnloadConfigFile(":treasuremap:guardians");
      SendSysMessage( who, "You unleash the treasure's guardians!" );
      ReleaseItem(tool);
      Detach();
      sleep(1800);
      DestroyItem(chest);
    endif
  endif
endprogram

function GetRange( who );
  var skill := AP_GetSkill( who, MINING );
  if( skill >= 100 )
    return 5;
  elseif( skill >= 80 )
    return 4;
  elseif( skill >= 60 )
    return 3;
  elseif( skill >= 40 )
    return 2;;
  elseif( skill >= 20 )
    return 1;
  else
    return 0;
  endif
endfunction

function CreateTreasureChest( map, x, y, z )
  z := GetWorldHeight( x, y, map.realm );
  var chest := CreateItemAtLocation(x, y, z-8, 0x0e40, 1, map.realm);
  chest.movable := 0;
  var lvl := GetObjProperty( map, "level" );
  SetObjProperty(chest, "level", lvl);
  var lootgroup;
  case(lvl)
    1: lootgroup := 5;
    2: lootgroup := 6;
    3: lootgroup := 7;
    4: lootgroup := 8;
    5: lootgroup := 9;
    default: lootgroup := 5;
  endcase
  makeloot(chest, lootgroup);
  return chest;
endfunction

function CreateGuardian( chest, template )
  var dx := RandomInt( 8 ) - 4;
  var dy := RandomInt( 8 ) - 4;
  var nasty := CreateNpcFromTemplate( template, chest.x+dx, chest.y+dy, chest.z, 0, chest.realm );
  if( nasty == "<error>" )
    CreateGuardian( chest, template );
  endif
endfunction

function is_minable(theobj, othertype)
  if( ((theobj >= 0xe2) && (theobj <= 0xe7)) || ((theobj >= 0xf3) && (theobj <= 0xf7)) || ((theobj >=
    0x104) && (theobj <= 0x107)) || ((theobj >= 0x110) && (theobj <= 0x113)) || ((theobj >= 0x122) && (theobj <=
    0x125)) || ((theobj >= 0x1d3) && (theobj <= 0x1da)) || ((theobj >= 0x21f) && (theobj <= 0x230)) ||
    ((theobj >= 0x232) && (theobj <= 0x23b)) || ((theobj >= 0x6cd) && (theobj <=0x6d1)) || ((theobj >= 0x6da) &&
    (theobj <= 0x6dd)) || ((theobj >= 0x6eb) && (theobj <= 0x6fe)) || ((theobj >= 0x70d) && (theobj <= 0x714)) ||
    ((theobj >= 0x71d) && (theobj <= 0x720)) || ((theobj >= 0x72b) && (theobj <= 0x732)) || ((theobj >= 0x73b) &&
    (theobj <= 0x73e)) || ((theobj >= 0x749) && (theobj <= 0x750)) || ((theobj >= 0x759) && (theobj <= 0x75c)) )
    return 1;
  elseif( (othertype >= 0x053b) && (othertype <= 0x0553) && (othertype != 0x0550 ) )
    return 1;
  elseif( (theobj == 0xdf) || (theobj == 0x75) || (theobj == 0xde) )
    return 1;
  else
    return 0;
  endif
endfunction

function GetOre(who, location, info, tool)
  if(coordist(who.x, who.y, location.x, location.y) > 2)
    SendSysMessage(who, "You stop mining.");
    return 1;
  endif
  if((who.x != startx) || (who.y != starty))
    SendSysMessage(who, "You stop mining.");
    return 1;
  endif
  var pid := 0;
  while(!pid)
	sleepms(50);
	pid := GetGlobalProperty(OC_PID);
  endwhile
  pid := getprocess(pid);
  if(!pid)
	return 1;
  endif
  var k := struct;
  k.+x := location.x;
  k.+y := location.y;
  k.+type := EVID_CHECK_SPOT;
  k.+source := getprocess(getpid());
  pid.sendevent(k);
  var oretype := wait_for_event(10);
  var diff := 0;
  var objtype := 0;
  var skill := AP_GetSkill(who, MINING);
  //var points := skill + 1;
  var name;
  case(oretype)
    1: diff :=  -1;   objtype := 0x6300;   name := "iron";
    2: diff :=  65;   objtype := 0x6301;   name := "dull copper";
    3: diff :=  70;   objtype := 0x6302;   name := "shadow";
    4: diff :=  75;   objtype := 0x6303;   name := "copper";
    5: diff :=  80;   objtype := 0x6304;   name := "bronze";
    6: diff :=  85;   objtype := 0x6305;   name := "golden";
    7: diff :=  90;   objtype := 0x6306;   name := "agapite";
    8: diff :=  95;   objtype := 0x6307;   name := "verite";
    9: diff :=  99;   objtype := 0x6308;   name := "valorite";
  endcase
  var diffi := GetHarvestDifficulty( "ore", location.x, location.y, info.landtile, who.realm );
  if(diffi == error)
    SendSysMessage(who,"There is no more ore here to mine.");
    return 1;
  endif
  if(diff != -1)
    var rint := RandomInt(5) + 1;
    if((CInt(skill) >= CInt(diff)) && (rint <= 3))
      diffi := diff;
    else
      oretype := 1;
      objtype := 0x6300;
      name := "iron";
    endif
  endif
  if( SkillCheck(who, MINING, diffi) > 0 )
  	var num := HarvestResource( "ore", location.x, location.y, 1, 1, who.realm);
    if(num == error)
      SendSysMessage(who,"There is no more ore here to mine.");
      return 1;
    endif
	var theore := CreateItemInBackpack(who, objtype, 1);
    if(!theore)
      SendSysMessage(who, "You put some " + name + " ore on the ground at your feet.");
      foreach thing in ListItemsNearLocation(who.x, who.y, who.z, 0, who.realm)
        if(thing.objtype == objtype)
          theore := thing;
          break;
          endif
      endforeach
      if(theore)
        var amt := theore.amount + 1;
        DestroyItem(theore);
        theore := CreateItemAtLocation(who.x, who.y, who.z, objtype, amt, who.realm);
      else
        theore := CreateItemAtLocation(who.x, who.y, who.z, objtype, 1, who.realm);
      endif
    else
	  SendSysMessage(who, "You put some " + name + " ore in your backpack.");
    endif
    //AwardRawSkillPoints(who, SKILLID_MINING, points);
    var swings := GetObjProperty(tool,"swings");
    if(!swings)
      SetObjProperty(tool,"swings", 0);
      swings := 0;
    endif
    if(swings > 50)
      DestroyItem(tool);
      SendSysMessage(who,"Your tool broke.");
      return 1;
    endif
    if(RandomInt(50) > 25)
      swings := swings + 1;
    endif
    SetObjProperty(tool,"swings", swings);
  else
	SendSysMessage(who, "You fail to find any usable ore.");
	return 0;
  endif
endfunction

function AddOreSpot(locvalue, neworetype, thefile)
    var props:= array;
    var prop:= array;
    prop .+ pname;
    prop .+ pvalue;
    prop.pname := "OreType";
    prop.pvalue := neworetype;
    props[1] := prop;
    AppendConfigFileElem(thefile, "OreSpawns", locvalue, props);
endfunction
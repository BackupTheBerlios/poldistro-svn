use npc;
use os;
use uo;

include "include/eventID";
include "include/sysEvent";
include ":npcutils:names";
include ":itemutils:utility";;
include "include/mrcSpawn";
include ":npcutils:vetement";
include ":npcutils:NPCBackpacks";
include "include/client";
include ":npcutils:anchors";
include "include/findCity";
include ":begging:begging";
include ":attributes:attributes";
include ":npcutils:trainSkill";

const MAX_SKILLS      := 48;

var me := Self();
me.hidden := 1;
var inv_fs, inv_pb, inv_1c, inv_rs;
var merchant_type := GetObjProperty(me,"MerchantType");
var equipt        := GetObjProperty(me, "Equipt");
var npccfg        := ReadConfigFile("::npcdesc");

set_priority(50);

program merchant()
  if(!merchant_type)
    SetObjProperty(me, "MerchantType", "Mage");
    merchant_type := "Mage";
  endif
  start_script("NPCKeeper", me);
  var myanchor := GetObjProperty(me, "Anchor");
  if(myanchor)
    MoveCharacterToLocation(me, myanchor[1], myanchor[2], myanchor[3], MOVECHAR_FORCELOCATION);
  endif
  drop_anchor();
  myanchor     := GetObjProperty(me, "Anchor");
  var spawnname := merchant_type + " " + myanchor[1] + " " + myanchor[2] + " " + myanchor[3];
  inv_fs := FindRootItemInStorageArea(storage, spawnname + " FS");
  inv_pb := FindRootItemInStorageArea(storage, spawnname + " PB");
  inv_1c := FindRootItemInStorageArea(storage, spawnname + " 1C");
  inv_rs := FindRootItemInStorageArea(storage, spawnname + " RS");
  while((!inv_rs) or (!inv_fs) or (!inv_pb) or (!inv_1c))
    sleep(5);
    inv_fs := FindRootItemInStorageArea(storage, spawnname + " FS");
    inv_pb := FindRootItemInStorageArea(storage, spawnname + " PB");
    inv_1c := FindRootItemInStorageArea(storage, spawnname + " 1C");
    inv_rs := FindRootItemInStorageArea(storage, spawnname + " RS");
  endwhile
  me.hidden := 0;
  EnableEvents(SYSEVENT_ITEM_GIVEN);
  DisableEvents(SYSEVENT_SPEECH);
  if(GetObjProperty(me, "frozen"))
    me.frozen := 1;
  endif
  var next_wander := ReadGameClock() + 10;
  var res := 0;
  while (1)
    var ev;
    ev := os::wait_for_event(120);
    if(ev)
      case (ev.type)
        EVID_NODE:                var txt := lower(ev.text);
                                  if((ev.source.cmdlevel > 2) && (txt["showinventory"]))
                                    SendOpenSpecialContainer(ev.source, inv_fs);
                                  elseif((ev.source.cmdlevel > 2) && (txt["showrestock"]))
                                    SendOpenSpecialContainer(ev.source, inv_rs);
                                  else
                                    if(txt["buy"])
                                      TurnToward(ev.source);
                                      res := SendBuyWindow(ev.source, inv_fs, me, inv_pb);
                                    elseif(txt["sell"])
                                      if(GetObjProperty(inv_rs, "MyGold") >= 1000)
                                        TurnToward(ev.source);
                                        var count := ModifyPCSellList(merchant_type, (ev.source).backpack);
                                        if(count >= 1)
                                          res := SendSellWindow(ev.source, me, inv_fs, inv_pb, inv_1c);
                                        else
                                          PrintTextAbovePrivate(me, "You don't have anything I would be interested in.", ev.source);
                                        endif
                                      else
                                        PrintTextAbovePrivate(me, "I cannot afford any more of that.", ev.source );
                                      endif
                                    elseif((txt["vendor train"]) || (txt["vendor teach"]) || (txt["merchant train"]) || (txt["merchant teach"]))
                                      TurnToward(ev.source);
                                      MerchantTrain(me, ev.source, ev.text);
                                    endif
                                  endif
        SYSEVENT_MERCHANT_BOUGHT: TurnToward(ev.source);
                                  PrintTextAbovePrivate(me, "The total of thy sale is " + ev.amount +".", ev.source);
                                  if(lower(merchant_type) != "appraiser")
                                    var mygold := GetObjProperty(inv_rs, "MyGold");
                                    mygold := mygold - ev.amount;
                                    SetObjProperty(inv_rs, "MyGold", mygold);
                                  endif
                                  foreach thing in EnumerateItemsInContainer(inv_pb)
                                    if(MoveItemToContainer(thing, inv_fs))
                                      SetObjProperty(thing,"ClearRestock", (ReadGameClock() + 1800));
                                      thing.buyprice  := itemconfig[thing.objtype].VendorBuysFor;
                                      thing.sellprice := itemconfig[thing.objtype].VendorSellsFor;
                                    else
                                      DestroyItem(thing);
                                    endif
                                  endforeach
                                  PlaySoundEffect(me, 0x38);
        SYSEVENT_MERCHANT_SOLD:   TurnToward(ev.source);
                                  PrintTextAbovePrivate(me, "The total of thy purchase is " + ev.amount +".", ev.source);
                                  foreach thing in ListRootItemsInContainer((ev.source).backpack)
                                    EraseObjProperty(thing, "ClearRestock");
                                  endforeach
                                  if(lower(merchant_type) != "appraiser")
                                    var mygold := GetObjProperty(inv_rs, "MyGold");
                                    mygold := mygold + ev.amount;
                                    SetObjProperty(inv_rs, "MyGold", mygold);
                                  endif
                                  PlaySoundEffect(me, 0x38);
        SYSEVENT_ITEM_GIVEN:      TrainSkill(me, ev.source, ev.item);
      endcase
    endif
	if(ReadGameClock() >= next_wander)
	  begpurse(me);
      wander();
      if(CoordinateDistance(me.x, me.y, myanchor[1], myanchor[2]) > 5)
        MoveCharacterToLocation(me, myanchor[1], myanchor[2], myanchor[3], MOVECHAR_FORCELOCATION);
      endif
      next_wander := ReadGameClock() + 30;
    endif
  endwhile
endprogram

function Lookiehere(who, npc)
  var ev;
  ev := array;
  ev.+ type;
  ev.+ source;
  ev.type := SYSEVENT_SPEECH;
  ev.text := "node";
  ev.source := npc;
  foreach thing in ListItemsNearLocationOfType(who.x, who.y, who.z, 15, 0x887b, who.realm)
    SendEvent(thing, ev);
  endforeach
endfunction
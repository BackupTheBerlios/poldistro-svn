use npc;
use os;
use uo;
use cfgfile;

include "include/eventID";
include "include/sysEvent";
include ":npcutils:names";
include ":npcutils:NPCUtil";
include ":itemutils:objtype";
include ":npcutils:anchors";
include ":oldAI:main/killPCsLoop";
include ":oldAI:combat/fight";
include ":oldAI:combat/spiderCombatEvent";
include ":oldAI:setup/setup";
include ":oldAI:main/loot";
include ":oldAI:main/sleepMode";


const HALT_THRESHOLD := 8; // how close before he attacks?
const UOBJ_SPIDERWEB := 0xbf01; //fixme!
var npccfgfile := ReadConfigFile( "::npcdesc" );
var idlesnd1 := CInt(npccfgfile[me.npctemplate].idlesound1);
var idlesnd2 := CInt(npccfgfile[me.npctemplate].idlesound2);
var waittime := 0;
var ev := 0;

program KillPlayers()

	SetWarMode( 0 );
	main_AI_loop();

endprogram

/////////////////////////////////////////////////////////////////////////////
//
//  These types fight singlemindedly, until the quarry is dead.
//  There is no way out but death.
//
/////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////
//
//  CloseDistance - close the distance between self and an opponent.
//  Returns: 1 if distance is 0 or 1 (no move necessary)
//           0 if distance is >= 2 (may still need to move)
//
//  This is a .EM-file candidate.
//
/////////////////////////////////////////////////////////////////////////////
function CloseDistance( opponent )


    case (Distance( me, opponent ))
        1:              // the most likely, so first
        0:
            return 1;
        default:
            RunToward( opponent );
            return 0;
    endcase

endfunction


// Look around me for humans to fight.

use npc;
use os;
use uo;
use cfgfile;

include "include/eventID";
include "include/sysEvent";
include ":brainAI:npcInit";
include ":npcutils:NPCUtil";
include "include/objtype";
include "include/dist";
include ":npcutils:anchors";
include ":oldAI:main/killPCsLoop";
include ":oldAI:combat/fight";
include ":oldAI:combat/slimeCombatEvent";
include ":oldAI:setup/setup";
include ":oldAI:main/loot";
include ":oldAI:main/sleepMode";
include "include/client";


const HALT_THRESHOLD := 8; // how close before he attacks?
var npccfgfile := ReadConfigFile( "::npcdesc" );
var idlesnd1 := CInt(npccfgfile[me.npctemplate].idlesound1);
var idlesnd2 := CInt(npccfgfile[me.npctemplate].idlesound2);
var waittime := 0;
var ev := 0;

program KillPlayers()
  colorme();
  SetWarMode( 0 );
  main_AI_loop();
endprogram

function CloseDistance( opponent )
  case (Distance( me, opponent ))
    1:
    0: return 1;
    default: RunToward( opponent );
             return 0;
  endcase
endfunction

function colorme()
  if(me.color == 0)
    case(RandomInt(10)+1)
      1: me.color := 340;
      2: me.color := 341;
      3: me.color := 471;
      4: me.color := 470;
      5: me.color := 456;
      6: me.color := 454;
      7: me.color := 606;
      8: me.color := 611;
      9: me.color := 735;
     10: me.color := 733;
    endcase
  endif
endfunction
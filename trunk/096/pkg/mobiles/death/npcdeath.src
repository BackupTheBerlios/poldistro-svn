/* $Id: death.src 402 2005-10-04 09:33:15Z panosl $
 *
 * Purpose
 * This script allows side effects to be triggered as a result of NPC death, like unmounting
 * players off their dying mount, playing death sounds, etc. This script is common for all NPCs,
 * and is called for each.
 *
 */
use uo;
use os;
use util;
use cfgfile;

include "include/client";
include "include/attributes";
include ":npcutils:NPCBackpacks";
include "include/noto";

var cfg := ReadConfigFile("npcdesc");


program core_npcDeath(params)
	var corpse := params[1];
	
	// if he had things to restock, destroy them, he's dead now.
	if (GetObjProperty(corpse, "restockserial"))
		var stocklist := SystemFindObjectBySerial(CInt(GetObjProperty(corpse, "restockserial")));
		DestroyItem(stocklist);
	endif

	// give noto and fame to the killer as appropriate.
	var killer := GetObjProperty(corpse, "LastHit");
	if ((killer != error) && (!GetObjProperty(corpse, "guardkill")))
		var kwho := SystemFindObjectBySerial(killer[2], SYSFIND_SEARCH_OFFLINE_MOBILES);
		AdjustNoto(kwho, corpse);

		// If killer was provoked, give noto to provoker
		var provoked := array;
		provoked := GetObjProperty(kwho, "Provoked"); 
		if (provoked) 
			kwho := SystemFindObjectBySerial(provoked[2], SYSFIND_SEARCH_OFFLINE_MOBILES);
			AdjustNoto(kwho, corpse);
			EraseObjProperty(killer[2], "Provoked");
		endif
	endif

	// A convoluted way to dismount the dead, if it was a player.
	var char;
	var mounted_char;
	var onchars := EnumerateOnlineCharacters();
	if (GetObjProperty(corpse,"mounted"))
		char := GetObjProperty(corpse,"mounted_on");
		foreach person in onchars
			if (person.serial == CInt(char))
				mounted_char := person;
				break;
			endif
		endforeach
		dismountme(mounted_char, corpse);
	endif

	// Play the death sound!
	var elem := GetObjProperty(corpse, "npctemplate");
	var deathsound := 0;
	var graphic := GetObjProperty(corpse, "Graphic");
	if ((graphic != 0x190) && (graphic != 0x191))
		deathsound := cfg[elem]."deathsound";
		if (deathsound)
			PlaySoundEffect(corpse, deathsound);
		endif
	endif

	set_critical(1);
	// Dismount NPCs.
	dismount(corpse);

	// Tell spawnregion that the recently deceased is dead.
	Run_Script_To_Completion(":spawnregion:death", corpse);
	if(GetObjProperty(corpse, "regspawn"))
		var spawnname := GetObjProperty(corpse, "regspawn");
		var numspawns := CInt(GetGlobalProperty(spawnname))-1;
		SetGlobalProperty(spawnname,numspawns);
	endif
	set_critical(0);

	// Destroy the corpse if it was guardkilled. No easy looting.
	if(GetObjProperty(corpse, "guardkill"))
		DestroyItem(corpse);
		return;
	endif

	// Destroy weapons and armor on employee, though I'm not sure why,
	// and then move their backpack into their corpse.
	if (GetObjProperty(corpse,"npctemplate") == "employee")
		foreach thing in EnumerateItemsInContainer(corpse)
			if ((thing.layer) && (thing.isa(POLCLASS_WEAPON) || thing.isa(POLCLASS_ARMOR)))
				DestroyItem(thing);
			endif
		endforeach
	endif
	MoveBackpackToCorpse(corpse);
  
	// Deal with playervendors
	if (GetObjProperty(corpse, "npctemplate") == "playervendor")
		var itemdesc := ReadConfigFile(":*:itemdesc");
		var elm, dsc;
		foreach thing in EnumerateItemsInContainer(corpse)
			EraseObjProperty(thing, "Vendored");
			if (GetObjProperty(thing, "Vendor"))
				DestroyItem(thing);
			else
				var oldname := GetObjProperty(thing, "OldName");
				if (oldname)
					SetName(thing, oldname);
				else
					elm := FindConfigElem(itemdesc, thing.objtype);
					dsc := itemdesc[thing.objtype].desc;
					SetName(thing, dsc);
				endif
				EraseObjProperty(thing, "Master");
				EraseObjProperty(thing, "OldName");
				EraseObjProperty(thing, "price");
			endif
		endforeach
	endif

	// summoned creatures leave no corpse
	if (GetObjProperty(corpse, "summoned"))
		DestroyItem(corpse);
		// if the creature has no corpse, move all the stuff in the corpse to the ground
		// and then destroy the corpse.
	elseif (GetObjProperty(corpse, "nocorpse"))
		foreach item in EnumerateItemsInContainer(corpse);
			MoveItemToLocation(item, corpse.x, corpse.y, corpse.z, MOVEITEM_FORCELOCATION);
		endforeach
		DestroyItem(corpse);
	else
	// This was here but I'm not sure what it was meant to do... doesn't so anything
	// right now, so I'm commenting out to remove the 'unused var' warning, but I'll
	// leave the code here in case anyone can figure out what it was meant for.
	//    var corpseof := GetObjProperty(corpse,"npctemplate");
	endif
  
	// This requires NPCKeeper. Destroy storage areas associated with the NPC.
	var theserial := CInt(GetObjProperty(corpse, "AiSerial"));
	var thestorage, inv_fs, inv_pb, inv_1c;
	var cont := "Bankbox  "+ Hex(theserial);
	thestorage := FindStorageArea("Tamed Storage");
	if (DestroyRootItemInStorageArea(thestorage, cont))
		print("Tamed storage for "+ Hex(theserial) +" destroyed.");
	else
		thestorage := FindStorageArea("Merchant Storage");
		inv_fs := theserial +" FS";
		inv_pb := theserial +" PB";
		inv_1c := theserial +" 1C";
		if (DestroyRootItemInStorageArea(thestorage, inv_fs))
			DestroyRootItemInStorageArea(thestorage, inv_pb);
			DestroyRootItemInStorageArea(thestorage, inv_1c);
			print("Merchant storage for "+ Hex(theserial) +" destroyed.");
		endif
	endif 

	return;
endprogram


function dismount(corpse)
	var mount := 0;
	GetEquipmentByLayer( corpse, 25 );
	foreach item in EnumerateItemsInContainer(corpse)
		if (item.objtype == 0xf021)
			mount := item;
			break;
		endif
	endforeach
	if (!mount)
		return;
	endif
	var critter := "";
	case (mount.graphic)
	0x3ea2: critter := "horse";
	0x3e9f: critter := "horse2";
	0x3ea0: critter := "horse3";
	0x3ea1: critter := "horse4";
	0x3ea6:	critter := "llama";
	0x3ea3:	critter := "desertostard";
	0x3ea4:	critter := "frenziedostard";
	0x3ea5:	critter := "forestostard";
	endcase
	if (mount.color == 1109)
		critter := "nightmare";
	endif
	if (!GetObjProperty(corpse,"doppelganger"))
		var animal := CreateNpcFromTemplate(critter, corpse.x, corpse.y, corpse.z,0, corpse.realm);
		animal.color := mount.color;
	endif
	DestroyItem(mount);

	return;
endfunction


function dismountme(who, corpse)
	var mount := GetEquipmentByLayer(who, 25 );
	var clone := GetObjProperty(corpse,"npctemplate");
	var newcorpse := CreateNpcFromTemplate(clone, corpse.x, corpse.y, corpse.z, 0, corpse.realm);
	var serial := newcorpse.serial;
	SetObjProperty(newcorpse,"myserial", serial);
	newcorpse.color := corpse.color;
	newcorpse.facing := who.facing;
	MoveCharacterToLocation(newcorpse, who.x, who.y, who.z, MOVECHAR_FORCELOCATION);
	var x := newcorpse.x;
	var y := newcorpse.y;
	var z := newcorpse.z;
	newcorpse.facing := who.facing;
	ApplyRawDamage(newcorpse, GetHp(newcorpse)+3);
	var contain;
	foreach cpse in ListItemsAtLocation(x, y, z, who.realm );
		if (CInt(GetObjProperty(cpse,"myserial")) == serial)
			contain := cpse;
			break;
		endif
	endforeach
	contain.name := corpse.name;
	foreach item in ListRootItemsInContainer(corpse)
		MoveItemToContainer(item, contain);
	endforeach
	DestroyItem(corpse);
	DestroyItem(mount);

	return;
endfunction


function ListRootItemsInContainer(container)
	var ret := { };
	foreach item in EnumerateItemsInContainer(container)
		if (item.container.serial == container.serial)
			ret[len(ret)+1] := item;
		endif
	endforeach

	return ret;
endfunction

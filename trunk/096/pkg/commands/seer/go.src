////////////////////////////////////////////////////////////////////////////////////////////////////
//
//  name:    go.src - Player Textcommand
//  version: 2.0a
//  author:  MuadDib
//
//  Purpose: New .go command that saves lists in DataFiles instead of Config Files for easier
//           handling. Allows you to add, remove, and edit entries. It also gives you a "base"
//           list of locations that everyone can see. As you add locations, they are all "account"
//           specific if added while viewing your Private locations. Only the adder will see his
//           personal list that has been added to the locations. If you are viewing the "public"
//           list when you use Add, it will add it to the Public list instead! You can also add
//           locations from the "base" list to the personal list via Copy. Then simply select the
//           location from the list given via gump.
//
//  To-Do:   Optimize gump functions within includes.
//           Add more "text" checks at beginning of the script. Possibly in /include/go_text.inc
//
////////////////////////////////////////////////////////////////////////////////////////////////////
use uo;
use os;
use datafile;

include ":datafile:datafile";
include "include/math";
include ":gumps:include/gumpprompt";
include ":gumps:include/gumps";
include ":gumps:include/gumps_ex";
include ":gumps:include/yesno";
include ":commands:include/go-add";
include ":commands:include/go-edit";
include ":commands:include/go-gumps";
include ":commands:include/go-template";

CONST ADD_NEW_PUBLIC      := 0x20001;
CONST ADD_NEW_PRIVATE     := 0x20002;
CONST COPY_PUBLIC_ITEM    := 0x20003;
CONST COPY_PRIVATE_ITEM   := 0x20004;
CONST EDIT_PUBLIC_ITEM    := 0x20005;
CONST EDIT_PRIVATE_ITEM   := 0x20006;
CONST UPDATE_BUTTON       := 0x20007;
CONST DELETE_BUTTON       := 0x20008;
CONST SHOW_PUBLIC_INDEX   := 0x20009;
CONST SHOW_PRIVATE_INDEX  := 0x2000A;

CONST BUILD_FROM_OLD      := 0x1;

var go_data_gumps := DFOpenDataFile(":commands:GoGumps", DF_CREATE);
var go_data_file  := DFOpenDataFile(":commands:GoFile", DF_CREATE);
var go_elem       := DFFindElement(go_data_file, "GoList", DF_CREATE);
var go_prop_base  := go_elem.GetProp("base_Distro");
var go_keys_base  := go_prop_base.keys();
var go_prop;
var go_keys;
var num_keys;
var edit_name;
var edit_update;
var edit_delete;
var x_pos;
var y_pos;
var z_pos;

program textcmd_go( who, text )

        if( lower(text) == "refresh" )
          Go_RefreshGump("LocationIndex", "base_Distro");
          Go_RefreshGump("LocationIndex", who.acctname);
          Go_RefreshGump("CopyIndex", "base_Distro");
          Go_RefreshGump("CopyIndex", who.acctname);
          SendSysMessage(who, "Gump Cache emptied for base and personal.");
          return;
        endif

        Go_CheckInit(who);
        // See if there is an element in the DataFile that matches their
        // account name.
        go_prop := go_elem.GetProp( who.acctname );

        // If there is no Element in the DataFile that matches their account name
        // let's create it now.
        if ( !go_prop )
                SendSysMessage(who, "Creating personal go list dictionary...");
                var temp := dictionary;
                go_elem.SetProp(who.acctname, temp);
                go_prop  := go_elem.GetProp(who.acctname);
        endif
        
        go_keys  := go_prop.keys();
        
        var gump_Open := GetObjProperty(who, "#Go_Gump");
        case(gump_Open)
          1: Go_LocationIndex(who);
          2: Go_LocationIndex(who, who.acctname);
          default: Go_LocationIndex(who);
        endcase


endprogram

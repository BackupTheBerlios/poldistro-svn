use uo;
use os;
use util;
use cfgfile;

include "include/attributes";
include "include/eventID";

const CONST_STATCAP := 225;
const CONST_SKILLCAP := 7000;

var skillscfg := ReadConfigFile(":*:skills");

program Attribute_server(who)
  SetObjProperty(who, "cap_pid", getpid());
  var ev;
  var counter := ReadGameClock() + 300;
  while(GetObjProperty(who, "LoggedIn"))
	ev := wait_for_event(120);
	if(GetObjProperty(who, "cap_pid") != GetPid())
	  break;
	endif
	if(ev)
      case(ev.type)
	    EVID_SKILLCAP: CheckSkillCap(who, ev);
	    EVID_STATCAP: CheckStatCap(who, ev);
      endcase
    endif
    if(counter < ReadgameClock())
      counter := ReadGameClock() + 300;
      Start_Script(":hooks:titleCheck", who);
    endif
  endwhile
endprogram

function CheckStatCap(who, ev)
  if(GetAttributeBaseValue(who, ev.skid) < 1000)
    SetAttributeBaseValue(who, ev.skid, Cint(ev.base));
  endif
  var skillid := Cint(ev.skil);
  var stat := skillscfg[skillid]."DropStat";
  var split := SplitWords(stat);
  var bs := GetBaseStrength(who);
  var bd := GetBaseDexterity(who);
  var bi := GetBaseIntelligence(who);
  if(bs > 100)
    SetBaseStrength(who, 100);
    bs := 100;
  endif
  if(bd > 100)
    SetBaseDexterity(who, 100);
    bd := 100;
  endif
  if(bi > 100)
    SetBaseIntelligence(who, 100);
    bi := 100;
  endif
  var stattotal := CInt(bs + bi + bd);
  if(stattotal > CONST_STATCAP)
    var loops := 1;
    while(stattotal > CONST_STATCAP)
      if(loops > 5)
        break;
      endif
      if(split[2])
        stat := split[RandomInt(2) + 1];
      endif
      case(stat)
        "str": bs := bs - 1;
               SetBaseStrength(who, bs);
        "dex": bd := bd - 1;
               SetBaseDexterity(who, bd);
        "int": bi := bi - 1;
               SetBaseIntelligence(who, bi);
      endcase
      stattotal := Cint(bs + bd + bi);
      loops := loops + 1;
    endwhile
  endif
  return 1;
endfunction

function CheckSkillCap(who, ev)
  var attributeid := ev.skid;
  if(GetAttributeBaseValue(who, attributeid) < 1000)
    SetAttributeBaseValue(who, attributeid, Cint(ev.base));
  endif
  if(GetAttributeBaseValue(who, attributeid) > 1000)
    SetAttributeBaseValue(who, attributeid, 1000);
  endif
  var skillarray := GetObjProperty(who,"SkillArray");
  var skilltotal := 0;
  var check := 0;
  var loops := 0;
  var holder, newval, final;
  while(check == 0)
    if(loops >= 6)
      break;
    endif
    skilltotal := 0;
    foreach thing in skillarray
//      true := GetBaseSkillBaseValue(who, thing);
//      base := Cint(true - GetAttributeIntrinsicMod(who, GetAttributeIdBySkillId(thing)));
//      skilltotal := skilltotal + base;
      skilltotal := GetBaseSkillBaseValue(who, thing);
    endforeach
    if(skilltotal > CONST_SKILLCAP)
      foreach entry in skillarray
        if((GetBaseSkillBaseValue(who, entry)) > 0)
          holder := CInt(entry);
          break;
        endif
      endforeach
      newval := GetBaseSkillBaseValue(who, holder);
      final := (newval - 1);
      SetBaseSkillBaseValue(who, holder, final);
    else
      check := 1;
    endif
    loops := loops + 1;
  endwhile
  return 1;
endfunction
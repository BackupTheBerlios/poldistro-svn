/* $Id$
 *
 */

use uo;
use os;
use polsys;

include ":partySystem:config";
include ":partySystem:packetInfo";

const OFFSET_PARTY_ADD_SIZE := 6;
const OFFSET_PARTY_ADD_PLAYERIDS := 7;

program handlePartyAccept(params)
	Set_Critical(DEBUG_SET_CRITICAL);

	var invited := params[1];
	var leader := SystemFindObjectBySerial(params[2]);
	var char, party, packet;

	// Clear PARTY_JOINING_PROP
	EraseObjProperty(invited, PARTY_JOINING_PROP);

	// Maybe the leader logged off
	if ( !leader )
		SendSysMessage(invited, "Unable to find party creator!", PARTY_FONT, PARTY_FONT_COLOR);
		return 0;
	endif

	party := GetObjProperty(leader, PARTY_PROP);

	// If there is no party array, start one
	if ( TypeOf(party) != "Array" )
		party := array{CInt(leader.serial)};
	else
		// Check if invited isn't in the party and if the party.Size() isn't too big
		if ( invited.serial in party )
			// Can't invite someone already in the party
			return 0;
		endif

		if ( party.Size() >= PARTY_MAX_SIZE )
			SendSysMessage(invited, "That party is too big to add any more members.", PARTY_FONT, PARTY_FONT_COLOR);
			return 0;
		endif
	endif

	// Add invited's serial to the party array
	party.Append(CInt(invited.serial));

	// Build the packet according to the party array
	packet := CreatePacket(MSGTYPE_PARTY, MSGLEN_VARIABLE);
	packet.SetInt16(OFFSET_PARTY_SUBCMD, 6); // Set subcmd to Party
	packet.SetInt8(OFFSET_PARTY_SUBSUBCMD, 1); // Set subsubcmd to Add
	packet.SetInt8(OFFSET_PARTY_ADD_SIZE, party.Size()); // Set party size

	// Append party member's serials at the end of packet
	for i := 1 to ( party.Size() )
		packet.SetInt32(OFFSET_PARTY_ADD_PLAYERIDS + ((i - 1) * 4), party[i]);
		sleepms(2);
	endfor

	// Set packet length
	packet.Set16(OFFSET_PARTY_MSGLEN, packet.GetSize());

	// Loop through each member in the party array and update PARTY_PROP and send Add packet
	foreach member in ( party )
		char := SystemFindObjectBySerial(member);

		if ( char )
			SetObjProperty(char, PARTY_PROP, party);
			packet.SendPacket(char);
		endif
		sleepms(2);
	endforeach

	SendSysMessage(leader, invited.name+" has accepted your invitation.", PARTY_FONT, PARTY_FONT_COLOR);
	SendSysMessage(invited, "You have joined the party.", PARTY_FONT, PARTY_FONT_COLOR);

	return 1;
endprogram
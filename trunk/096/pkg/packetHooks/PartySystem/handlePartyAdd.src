/* $Id$
 *
 */

use uo;
use os;
use polsys;

include ":partySystem:config";
include ":partySystem:packetInfo";

const OFFSET_PARTY_INVITE_PLAYERID := 6;

program handlePartyAdd(who)
	Set_Critical(DEBUG_SET_CRITICAL);

	var party := GetObjProperty(who, PARTY_PROP);
	var temp, targ, packet;

	// Check to see if who is the leader of their party and the party size
	if ( TypeOf(party) == "Array" )
		if ( party[1] != who.serial )
			SendSysMessage(who, "Only the creator of the party can add members.", PARTY_FONT, PARTY_FONT_COLOR);
			return 0;
		endif

		if ( party.Size() > PARTY_MAX_SIZE )
			SendSysMessage(who, "Your party is too big to add any more members.", PARTY_FONT, PARTY_FONT_COLOR);
			return 0;
		endif
	endif

	SendSysMessage(who, "Who would you like to add to your party?", PARTY_FONT, PARTY_FONT_COLOR);

	targ := Target(who);

	// Check if who is targetting themselves, if targ is a player and and targ is alive
	if ( targ.serial != who.serial && targ.acct && !targ.dead )
		// Check if targ is already in a party or is about to join one
		if ( GetObjProperty(targ, PARTY_JOINING_PROP) )
			SendSysMessage(who, "That person is already being invited into a party.", PARTY_FONT, PARTY_FONT_COLOR);
			return 0;
		endif

		if ( GetObjProperty(targ, PARTY_PROP) )
			SendSysMessage(who, "That person is already in a party.", PARTY_FONT, PARTY_FONT_COLOR);
			return 0;
		endif

		// Set the PARTY_JOINING_PROP on the target with who.serial
		SetObjProperty(targ, PARTY_JOINING_PROP, CInt(who.serial));

		SendSysMessage(targ, who.name+": You are invited to join the party. Type /accept to join or /decline to decline the offer.", PARTY_FONT, PARTY_FONT_COLOR);

		// Build Invite subsubcmd packet and send to targ
		packet := CreatePacket(MSGTYPE_PARTY, 10);
		packet.SetInt16(OFFSET_PARTY_MSGLEN, 10); // Set packet length
		packet.SetInt16(OFFSET_PARTY_SUBCMD, 6); // Set subcmd to Party
		packet.SetInt8(OFFSET_PARTY_SUBSUBCMD, 7); // Set subsubcmd to Invite
		packet.SetInt32(OFFSET_PARTY_INVITE_PLAYERID, who.serial); // Set leader's serial
		packet.SendPacket(targ); // Send the invite packet to the target

		Detach();

		// Loop here for PARTY_INVITE_TIMEOUT seconds, checking if the user has accepted each second
		for i := 1 to ( PARTY_INVITE_TIMEOUT )
			sleep(1);

			temp := GetObjProperty(targ, PARTY_PROP);

			if ( !GetObjProperty(targ, PARTY_JOINING_PROP) )
				// targ has declined and is in the process of joining another party
				return 0;
			elseif ( temp[1] == who.serial )
				// targ has accepted, targ's party prop has who as the leader
				EraseObjProperty(targ, PARTY_JOINING_PROP);
				return 0;
			elseif ( temp && temp[1] != who.serial )
				// targ has declined and then joined another party
				EraseObjProperty(targ, PARTY_JOINING_PROP);
				SendSysMessage(who, "Your target is already in another party.", PARTY_FONT, PARTY_FONT_COLOR);
				return 0;
			elseif ( targ.dead || !targ )
				// targ has left the matrix or is dead
				SendSysMessage(who, "Your target can no longer accept.", PARTY_FONT, PARTY_FONT_COLOR);
				return 0;
			endif
		endfor

		// targ never made a choice, so automatic decline
		EraseObjProperty(targ, PARTY_JOINING_PROP);

		SendSysMessage(targ, "You decline their offer.", PARTY_FONT, PARTY_FONT_COLOR);
		SendSysMessage(who, targ.name+" has declined your offer.", PARTY_FONT, PARTY_FONT_COLOR);

		return 0;
	else
		// Invalid target
		SendSysMessage(who, "Cancelled.", PARTY_FONT, PARTY_FONT_COLOR);
	endif

	return 1;
endprogram
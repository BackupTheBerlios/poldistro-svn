use uo;
use os;

include ":gumps:include/gumps";
include ":gumps:include/gumps_ex";
include ":gumps:include/gumpprompt";
include ":gumps:include/requestgump";
include ":spawnsystem:include/realms";
include ":spawnsystem:include/regions";

unload_scripts("");

// Used for button ranges
const REALM_START	:= 0xA0000;
const REGION_START	:= 0xB0000;
const GROUP_START	:= 0xC0000;

const CLOSE_BTN		:= 0xA4;
const ADD_REALM_BTN	:= 0xA5;
const ADD_REGION_BTN	:= 0xA6;
const ADD_GROUP_BTN	:= 0xA7;
const REMOVE_REALM_BTN	:= 0xA8;
const REMOVE_REGION_BTN	:= 0xA9;
const REMOVE_GROUP_BTN	:= 0xAA;
const SHOW_REALMS_BTN	:= 0xAB;
const SHOW_REGIONS_BTN	:= 0xAC;
const SHOW_THIS_REGION	:= 0xAD;
const SHOW_GROUPS_BTN	:= 0xAE;
const SEARCH_BTN	:= 0xAF;
const VISIT_REGION_BTN	:= 0xB0;
const APPLY_BTN		:= 0xB1;
const REGION_GROUPS_BTN	:= 0xB2;

const X1_TEXT_POS	:= 0xF00;
const Y1_TEXT_POS	:= 0xF01;
const X2_TEXT_POS	:= 0xF02;
const Y2_TEXT_POS	:= 0xF03;
const NAME_TEXT_POS	:= 0xF04;
const WAIT_TEXT_POS	:= 0xF05;

program SpawnerCMD(who)
	var input := SHOW_REALMS_BTN;
	var cur_menu := SHOW_REALMS_BTN;
	var cur_realm, cur_region, cur_group;
	var gump;

	while ( who.connected )
		if ( input )
			if ( cur_menu == SHOW_REALMS_BTN )
				input := BuildRealmListGump(who);
			elseif ( cur_menu == SHOW_REGIONS_BTN )
				input := BuildRegionListGump(who, cur_realm);
			elseif ( cur_menu == SHOW_THIS_REGION )
				input := BuildRegionInfoGump(who, cur_realm, cur_region);
			elseif ( cur_menu == ADD_REALM_BTN )
				input := BuildAddRealmGump(who);
			elseif ( cur_menu == ADD_REGION_BTN )
				input := BuildAddRegionGump(who, cur_realm);
			endif
		endif

		SendSysMessage(who, "Input=="+input);

		if ( !input || input == CLOSE_BTN )
			break;
		elseif ( input == VISIT_REGION_BTN )
			VisitRegionCenter(who, cur_region);
		elseif ( input == SHOW_REALMS_BTN )
			cur_menu := SHOW_REALMS_BTN;
		elseif ( input == ADD_REALM_BTN )
			cur_menu := ADD_REALM_BTN;
		elseif ( input == ADD_REGION_BTN )
			cur_menu := ADD_REGION_BTN;
		elseif ( input == SHOW_REGIONS_BTN )
			cur_menu := SHOW_REGIONS_BTN;
		elseif ( input >= REGION_START ) // Button next to a region name was clicked.
			cur_menu := SHOW_THIS_REGION;
			var region_list := SS_GetRegionsInRealm(cur_realm).keys();
			cur_region := region_list[input-REGION_START];
		elseif ( input >= REALM_START ) // Button next to a realm name was clicked.
			cur_menu := SHOW_REGIONS_BTN;
			var realm_list := SS_GetRealmNames();
			cur_realm := realm_list[input-REALM_START];
		endif
	endwhile

	SendSysMessage(who, "Done.");
endprogram

function BuildGumpTemplate(realm_name:="")
	var bkgnd_silvertrim := GFCfgConst("Defaults", "BackGround");
	var bkgnd_dark_stone := GFCfgConst("Defaults", "ForeGround");

	var gump := GFCreateGump();
	GFPage(gump, 0);
	GFClosable(gump, 0);
	GFResizePic(gump, 0, 0, bkgnd_silvertrim, 640, 480);
	GFResizePic(gump, 15, 15, bkgnd_dark_stone, 125, 450);
	GFResizePic(gump, 145, 15, bkgnd_dark_stone, 480, 450);

	GFAddButton(gump, 20, 23, 2117, 2118, GF_CLOSE_BTN, SHOW_REALMS_BTN);
	GFTextLine(gump, 35, 20, 2100, "Realm List");
	GFAddButton(gump, 20, 43, 2117, 2118, GF_CLOSE_BTN, ADD_REALM_BTN);
	GFTextLine(gump, 35, 40, 2100, "Add Realm");

	GFAddButton(gump, 20, 83, 2117, 2118, GF_CLOSE_BTN, SHOW_GROUPS_BTN);
	GFTextLine(gump, 35, 80, 2100, "Group List");
	GFAddButton(gump, 20, 103, 2117, 2118, GF_CLOSE_BTN, ADD_GROUP_BTN);
	GFTextLine(gump, 35, 100, 2100, "Add Group");

	if ( realm_name )
		GFAddButton(gump, 20, 143, 2117, 2118, GF_CLOSE_BTN, SHOW_REGIONS_BTN);
		GFTextLine(gump, 35, 140, 2100, "Regions List");
		GFAddButton(gump, 20, 163, 2117, 2118, GF_CLOSE_BTN, ADD_REGION_BTN);
		GFTextLine(gump, 35, 160, 2100, "Add Region");
	endif

	GFAddButton(gump, 20, 443, 2117, 2118, GF_CLOSE_BTN, CLOSE_BTN);
	GFTextLine(gump, 35, 440, 2100, "CLOSE");

	return gump;
endfunction

function BuildRealmListGump(who)
	var realm_list := SS_GetRealmNames();
	var gump := BuildGumpTemplate();

	GFTextMid(gump, 145, 20, 485, 2100, "Realm List");
	var y_pos := 50;
	foreach realm_name in realm_list
		GFAddButton(gump, 155, y_pos+3, 2117, 2118, GF_CLOSE_BTN, (REALM_START+_realm_name_iter));
		GFTextLine(gump, 175, y_pos, 2100, realm_name);

		y_pos := y_pos+20;
		sleepms(2);
	endforeach

	var input := GFSendGump(who, gump);
	return input[0];
endfunction

function BuildRegionListGump(who, realm_name)
	var region_list := SS_GetRegionsInRealm(realm_name).keys();
	var gump := BuildGumpTemplate(realm_name);

	GFTextMid(gump, 145, 20, 485, 2100, "Region List ["+realm_name+"]");
	var y_pos := 50;
	foreach region_name in (region_list)
		GFAddButton(gump, 155, y_pos+3, 2117, 2118, GF_CLOSE_BTN, (REGION_START+_region_name_iter));
		GFTextLine(gump, 175, y_pos, 2100, region_name);

		y_pos := y_pos+20;
		sleepms(2);
	endforeach

	var input := GFSendGump(who, gump);
	return input[0];
endfunction

function BuildRegionInfoGump(who, realm_name, region_name)
	var region_info := SS_GetRegionDataElem(region_name);
	var gump := BuildGumpTemplate(realm_name);

	GFTextMid(gump, 145, 20, 485, 2100, "Region Information ["+realm_name+"]");

	GFTextLine(gump, 155, 50, 2100, "Region Name");
	GFResizePic(gump, 230, 46, GFCfgConst("Backgrounds", "GOLDTRIM"), 245, 28);
	GFTextLine(gump, 236, 50, 1000, region_name);
	
	var coords := SS_GetRegionCoordinates(region_name);
	GFTextLine(gump, 155, 80, 2100, "Coordinates");
	GFTextLine(gump, 245, 80, 2100, "X1");
	GFResizePic(gump, 230, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 236, 104, 35, 20, 2100, coords.x1, X1_TEXT_POS);
	GFTextLine(gump, 285, 80, 2100, "Y1");
	GFResizePic(gump, 270, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 276, 104, 35, 20, 2100, coords.y1, Y1_TEXT_POS);
	GFTextLine(gump, 335, 80, 2100, "X2");
	GFResizePic(gump, 320, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 326, 104, 35, 20, 2100, coords.x2, X2_TEXT_POS);
	GFTextLine(gump, 375, 80, 2100, "Y2");
	GFResizePic(gump, 360, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 366, 104, 35, 20, 2100, coords.y2, Y2_TEXT_POS);
	
	GFTextLine(gump, 500, 80, 2100, "Spawn Wait (Sec.)");
	GFResizePic(gump, 525, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 65, 28);
	GFTextEntry(gump, 531, 104, 55, 20, 2100, SS_GetRegionSpawnWait(region_name), WAIT_TEXT_POS);
	
	GFAddButton(gump, 354, 174, 0x84C, 0x84B, GF_CLOSE_BTN, APPLY_BTN);
	
	GFGumpPic(gump, 165, 175, 0x5F);
	GFGumpPic(gump, 174, 184, 0x60);
	GFGumpPic(gump, 411, 184, 0x60);
	GFGumpPic(gump, 590, 175, 0x61);
		
	GFAddButton(gump, 155, 203, 2117, 2118, GF_CLOSE_BTN, REGION_GROUPS_BTN);
	GFTextLine(gump, 175, 200, 2100, "Manage region groups.");
	
	GFAddButton(gump, 155, 223, 2117, 2118, GF_CLOSE_BTN, VISIT_REGION_BTN);
	GFTextLine(gump, 175, 220, 2100, "Goto region center.");
	
	var input := GFSendGump(who, gump);
	if ( input[APPLY_BTN] )
		var x1 := GFExtractData(input, X1_TEXT_POS);
		var y1 := GFExtractData(input, Y1_TEXT_POS);
		var x2 := GFExtractData(input, X2_TEXT_POS);
		var y2 := GFExtractData(input, Y2_TEXT_POS);
		var wait := GFExtractData(input, WAIT_TEXT_POS);
		SS_SetRegionCoordinates(region_name, x1, y1, x2, y2);
		SS_SetRegionSpawnWait(region_name, wait);
	endif
	
	return input[0];
endfunction

function VisitRegionCenter(who, region_name)
	var realm_name := Lower(SS_GetRegionRealm(region_name));
	var coords := SS_GetRegionCoordinates(region_name);
	var x := ((coords.x2 - coords.x1) / 2) + coords.x1;
	var y := ((coords.y2 - coords.y1) / 2) + coords.y1;
	var z := GetMapInfo(x, y, realm_name).z;

	var result := MoveObjectToLocation(who, x, y, z, realm_name, MOVECHAR_FORCELOCATION);
	if ( result.errortext )
		GumpPrompt(who, ""+result.errortext);
		return 0;
	else
		GumpPrompt(who, "Moved to "+realm_name+" [P] X("+x+") Y("+y+") Z("+z+")");
	endif

	return 1;
endfunction

function BuildAddRealmGump(who)
	var gump := BuildGumpTemplate();

	GFTextMid(gump, 145, 20, 485, 2100, "Add Realm");

	var used_realms := SS_GetRealmNames();
	var realm_names := Realms().keys();
	var y_pos := 50;

	foreach realm_name in ( realm_names )
		//if ( !(realm_name in used_realms) )
			GFAddButton(gump, 155, y_pos+3, 2117, 2118, GF_CLOSE_BTN, _realm_name_iter);
			GFTextLine(gump, 175, y_pos, 2100, realm_name);
			y_pos := y_pos+20;
		//endif
		sleepms(2);
	endforeach

	var input := GFSendGump(who, gump);
	input := input[0];

	var new_realm := realm_names[input];
	if ( new_realm )
		var result := SS_AddRealm(new_realm);
		if ( result.errortext )
			GumpPrompt(who, result.errortext);
		endif
	endif

	return input;
endfunction

function BuildAddRegionGump(who, realm_name)
	var gump := BuildGumpTemplate(realm_name);

	GFTextMid(gump, 145, 20, 485, 2100, "Add Region ["+realm_name+"]");

	GFTextLine(gump, 155, 50, 2100, "Region Name");
	GFResizePic(gump, 230, 46, GFCfgConst("Backgrounds", "GOLDTRIM"), 245, 28);
	GFTextEntry(gump, 236, 50, 235, 20, 2100, "", NAME_TEXT_POS);
	
	GFTextLine(gump, 155, 80, 2100, "Coordinates");
	GFTextLine(gump, 245, 80, 2100, "X1");
	GFResizePic(gump, 230, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 236, 104, 35, 20, 2100, "", X1_TEXT_POS);
	GFTextLine(gump, 285, 80, 2100, "Y1");
	GFResizePic(gump, 270, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 276, 104, 35, 20, 2100, "", Y1_TEXT_POS);
	GFTextLine(gump, 335, 80, 2100, "X2");
	GFResizePic(gump, 320, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 326, 104, 35, 20, 2100, "", X2_TEXT_POS);
	GFTextLine(gump, 375, 80, 2100, "Y2");
	GFResizePic(gump, 360, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 45, 28);
	GFTextEntry(gump, 366, 104, 35, 20, 2100, "", Y2_TEXT_POS);
	
	GFTextLine(gump, 500, 80, 2100, "Spawn Wait (Sec.)");
	GFResizePic(gump, 525, 100, GFCfgConst("Backgrounds", "GOLDTRIM"), 65, 28);
	GFTextEntry(gump, 531, 104, 55, 20, 2100, "", WAIT_TEXT_POS);
	
	GFGumpPic(gump, 165, 175, 0x5F);
	GFGumpPic(gump, 174, 184, 0x60);
	GFGumpPic(gump, 411, 184, 0x60);
	GFGumpPic(gump, 590, 175, 0x61);
	
	GFAddButton(gump, 366, 174, 0x482, 0x483, GF_CLOSE_BTN, APPLY_BTN);
	GFTextLine(gump, 345, 200, 2100, "Create Region.");
	
	var input := GFSendGump(who, gump);
	if ( input[APPLY_BTN] )
		var region_name := GFExtractData(input, NAME_TEXT_POS);
		var result := SS_AddRegion(region_name, realm_name);
		if ( result.errortext )
			GumpPrompt(who, "Error Creating Region [P] "+result.errortext);
		else
			var x1 := GFExtractData(input, X1_TEXT_POS);
			var y1 := GFExtractData(input, Y1_TEXT_POS);
			var x2 := GFExtractData(input, X2_TEXT_POS);
			var y2 := GFExtractData(input, Y2_TEXT_POS);
			var wait := GFExtractData(input, WAIT_TEXT_POS);
			SS_SetRegionCoordinates(region_name, x1, y1, x2, y2);
			SS_SetRegionSpawnWait(region_name, wait);
			SS_AddRegionToRealm(realm_name, region_name);
			GumpPrompt(who, "Region added.");
		endif
	endif
	
	return input[0];
endfunction

use uo;
use os;
use cfgfile;
include "hitScriptInc";

var npccfgfile := ReadConfigFile("::npcdesc");

program MainHitScript(attacker, defender, weapon, armor, basedamage, rawdamage)
  if(defender == attacker)
    SendSysMessage(attacker, "No cheating!");
    ApplyRawDamage(attacker, 1000);
    return;
  endif
  if((defender.npctemplate == "townguard") or (defender.npctemplate == "playervendor"))
    ApplyRawDamage(attacker, 1000);
    return;
  endif
  if((attacker.npctemplate == "townguard") or (attacker.npctemplate == "playervendor"))
    ApplyRawDamage(defender, 1000);
    return;
  endif
  if(defender.isA(POLCLASS_NPC))
    var damagedsound := CInt(npccfgfile[defender.npctemplate].damagedsound);
    if(damagedsound)
      PlaySoundEffect(defender, damagedsound);
    endif
    PerformAction(defender, 0xa);
    basedamage := basedamage * 2;
    rawdamage := rawdamage * 2;
  else
    if(attacker.acctname && defender.acctname)
      basedamage := basedamage / 2;
      rawdamage := rawdamage / 2;
    endif
  endif
  if(attacker.npctemplate == "employee")
    basedamage := basedamage / 2;
    rawdamage := rawdamage / 2;
  endif
  SetObjProperty(defender, "LastHit", {attacker.name, attacker.serial, weapon.name });
  var shield := GetEquipmentByLayer(defender, 2);
  if(shield)
    var bd;
    if(basedamage > 100)
      bd := 100;
    else
      bd := basedamage;
    endif
    if(RandomInt(Cint(GetEffectiveSkill(defender, SKILLID_PARRY) / 2)) >= bd)
      armor := shield;
    endif
  endif
  var weaponhit := GetObjProperty(weapon, "OnHit");
  if(weapon.hp > weapon.maxhp)
    DestroyItem(weapon);
    rawdamage := 0;
  endif
  var armorhit;
  if(armor == 0)
    armorhit := GetObjProperty(defender, "ArmorHit");
  else
    armorhit := GetObjProperty(armor, "ArmorHit");
  endif
  if(!weaponhit)
    if(!armorhit)
      run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
      rawdamage := GetObjProperty(defender, "TempDamage");
      if(GetObjProperty(weapon, "SilverHit"))
        run_script_to_completion("silverHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
        rawdamage := GetObjProperty(defender, "TempDamage");
      endif
      rawdamage := Cint(rawdamage + Cint(GetEffectiveSkill(attacker, SKILLID_ANATOMY) / 20));
      if(rawdamage < 1)
        rawdamage := 1;
      endif
      DealDamage(defender, attacker, rawdamage);
      return;
    else
      SetObjProperty(defender, "TempDamage", rawdamage);
      foreach x in armorhit
        Detach();
        run_script_to_completion(x, { attacker, defender, weapon, armor, basedamage, rawdamage } );
        rawdamage := CInt(GetObjProperty(defender, "TempDamage") );
      endforeach
      run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
      rawdamage := GetObjProperty(defender, "TempDamage");
      EraseObjProperty(defender, "TempDamage");
      if(GetObjProperty(weapon, "SilverHit"))
        run_script_to_completion("silverHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
        rawdamage := GetObjProperty(defender, "TempDamage");
      endif
      rawdamage := Cint(rawdamage + Cint(GetEffectiveSkill(attacker, SKILLID_ANATOMY) / 20));
      if(rawdamage < 1)
        rawdamage := 1;
      endif
      DealDamage(defender, attacker, rawdamage);
      return;
    endif
  else
    SetObjProperty(defender, "TempDamage", rawdamage);
    foreach x in weaponhit
      Detach();
      run_script_to_completion(CStr(x), { attacker, defender, weapon, armor, basedamage, rawdamage } );
      rawdamage := GetObjProperty(defender, "TempDamage");
    endforeach
    EraseObjProperty(defender, "TempDamage");
    run_script_to_completion("reactiveArmorHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
    rawdamage := GetObjProperty(defender, "TempDamage");
    if(GetObjProperty(weapon, "SilverHit"))
      run_script_to_completion("silverHit", { attacker, defender, weapon, armor, basedamage, rawdamage } );
      rawdamage := GetObjProperty(defender, "TempDamage");
    endif
    rawdamage := Cint(rawdamage + Cint(GetEffectiveSkill(attacker, SKILLID_ANATOMY) / 20));
    if(rawdamage < 1)
      rawdamage := 1;
    endif
    DealDamage(defender, attacker, rawdamage);
    return;
  endif
endprogram

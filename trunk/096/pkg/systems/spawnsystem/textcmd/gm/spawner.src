use uo;
use os;

include ":gumps:include/gumps";
include ":gumps:include/gumps_ex";
include ":spawnsystem:include/realms";
include ":spawnsystem:include/regions";

unload_scripts("");

const START_ID		:= 0x1;
const ADD_REALM_BTN	:= 0x5;
const ADD_REGION_BTN	:= 0x6;
const ADD_GROUP_BTN	:= 0x7;
const REMOVE_REALM_BTN	:= 0x8;
const REMOVE_REGION_BTN	:= 0x9;
const REMOVE_GROUP_BTN	:= 0xA;
const SHOW_REALMS_BTN	:= 0x20;
const SHOW_REGIONS_BTN	:= 0x21;
const SHOW_GROUPS_BTN	:= 0x22;
const SEARCH_BTN	:= 0x30;

program SpawnerCMD(who)
	var input := SHOW_REALMS_BTN;
	var cur_menu := SHOW_REALMS_BTN;
	var cur_realm, cur_region, cur_group;
	var gump;
	
	while ( 1 )
		if ( input )
			if ( cur_menu == SHOW_REALMS_BTN )
				input := BuildRealmListGump(who);
			endif
		endif
		
		sleepms(2);
		
		if ( !input )
			break;
		elseif ( input == SHOW_REALMS_BTN )
			cur_menu := SHOW_REALMS_BTN;
		endif
	endwhile
	
	SendSysMessage(who, "Done.");
endprogram

function BuildGumpTemplate(realm_name:="")
	var bkgnd_silvertrim := GFCfgConst("BackGrounds", "SILVERTRIM");
	var bkgnd_dark_stone := GFCfgConst("BackGrounds", "DARK_STONE");
	
	var gump := GFCreateGump();
	GFResizePic(gump, 0, 0, bkgnd_silvertrim, 640, 480);
	GFResizePic(gump, 10, 10, bkgnd_dark_stone, 130, 460);
	GFResizePic(gump, 145, 10, bkgnd_dark_stone, 485, 460);
	
	GFAddButton(gump, 15, 23, 2117, 2118, GF_CLOSE_BTN, SHOW_REALMS_BTN);
	GFTextLine(gump, 35, 20, 2100, "Realm List");
	GFAddButton(gump, 15, 43, 2117, 2118, GF_CLOSE_BTN, ADD_REALM_BTN);
	GFTextLine(gump, 35, 40, 2100, "Add Realm");
	
	GFAddButton(gump, 15, 83, 2117, 2118, GF_CLOSE_BTN, SHOW_GROUPS_BTN);
	GFTextLine(gump, 35, 80, 2100, "Group List");
	GFAddButton(gump, 15, 103, 2117, 2118, GF_CLOSE_BTN, ADD_GROUP_BTN);
	GFTextLine(gump, 35, 100, 2100, "Add Group");
	
	if ( realm_name )
		GFAddButton(gump, 15, 143, 2117, 2118, GF_CLOSE_BTN, SHOW_REGIONS_BTN);
		GFTextLine(gump, 35, 140, 2100, "Regions List");
		GFAddButton(gump, 15, 163, 2117, 2118, GF_CLOSE_BTN, ADD_REGION_BTN);
		GFTextLine(gump, 35, 160, 2100, "Add Region");
	endif
	
	return gump;
endfunction
	
function BuildRealmListGump(who)
	var realm_list := SSGetRealmNames();
	var gump := BuildGumpTemplate();
	
	GFTextMid(gump, 145, 20, 485, 2100, "Realm List");
	var y_pos := 50;
	foreach realm_name in realm_list
		GFAddButton(gump, 155, y_pos+3, 2117, 2118, GF_CLOSE_BTN, _realm_name_iter);
		GFTextLine(gump, 175, y_pos, 2100, realm_name);
		
		y_pos := y_pos+20;
		sleepms(2);
	endforeach
	
	var input := GFSendGump(who, gump);
	return input[0];
endfunction

function BuildRegionListGump(who, realm_name)
	var region_list := SSGetRegionsInRealm(realm_name).keys();
	var gump := BuildGumpTemplate(realm_name);
	
	GFTextMid(gump, 145, 20, 485, 2100, "Region List ["+realm_name+"]");
	var y_pos := 50;
	foreach region_name in (region_list)
		GFAddButton(gump, 155, y_pos+3, 2117, 2118, GF_CLOSE_BTN, _region_name_iter);
		GFTextLine(gump, 175, y_pos, 2100, region_name);
		
		y_pos := y_pos+20;
		sleepms(2);
	endforeach
	
	var input := GFSendGump(who, gump);
	return input[0];
	
endfunction

function BuildRegionInfoGump(who, realm_name, region_name)
	var region_info := SSGetRegionDataElem(region_name);
	var gump := BuildGumpTemplate(realm_name);
	
	GFTextMid(gump, 145, 20, 485, 2100, "Region Information ["+region_name+"]");
	
	var input := GFSendGump(who, gump);
	return input[0];
endfunction
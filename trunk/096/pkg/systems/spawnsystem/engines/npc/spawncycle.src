use uo;
use os;

include ":spawnsystem:include/groups";
include ":spawnsystem:include/regions";
include ":spawnsystem:include/spawner";

program SpawnCycle(params)
	var engine_name	:= params[1];
	var realm_name	:= params[2];
	var region_name	:= params[3];
	var group_name	:= params[4];

	var coords := SSGetRegionCoordinates(region_name);
	var group_entries := SSGetEntriesInGroup(group_name).keys();
	var num_entries := group_entries.size();
	var group_settings := SSGetGroupInRegion(region_name, group_name);

	var max_amt := group_settings.max_amt;
	var cur_amount := SSGetSpawnsInRegionGroup(region_name, group_name).size();

	for ( cur_amount; cur_amount <= max_amt; cur_amount := cur_amount+1 )
		var spawn_coords := SSSelectCoordsInArea(coords.x1, coords.y1, coords.x2, coords.y2);
		var spawn_object := group_entries[RandomInt(num_entries)];

		var created := CreateNPCFromTemplate(spawn_object, spawn_coords.x, spawn_coords.y, spawn_coords.z, 0, realm_name);
		if ( created )
			SSAddSpawnToRegion(region_name, group_name, created);
		endif
		sleepms(2);
	endfor

	return 1;
endprogram

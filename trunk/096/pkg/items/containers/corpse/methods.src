// $Id$

use uo;
use util;
use os;

program Install()
	return 1;
endprogram

exported function GetOwner(corpse)
	if ( corpse.ownerserial )
		return SystemFindObjectBySerial(corpse.ownerserial);
	elseif ( CInt(GetObjProperty(corpse, "ownerserial")) )
		return SystemFindObjectBySerial(CInt(GetObjProperty(corpse, "ownerserial")));
	endif
endfunction

exported function SetOwner(corpse, serial)
	if ( serial.IsA(POLCLASS_UOBJECT) )
		serial := serial.serial;
	endif
	return SetObjProperty(corpse, "ownerserial", serial);
endfunction

exported function NPCTemplate(corpse)
	var template := GetObjProperty(corpse, "npctemplate");
	if ( template )
		return template;
	else
		return error{"errortext":="Corpse did not belong to an npc."};
	endif
endfunction

exported function IsPlayerCorpse(corpse)
	var owner := GetOwner(corpse);
	
	if ( owner )
		return owner;
	else
		return error{"errortext":="Corpse does not have an owner."};
	endif
endfunction

exported function SetSkinned(corpse, skinner)
	var serial;

	if ( skinner.ISA(POLCLASS_MOBILE) )
		serial := skinner.serial;
	else
		serial := skinner;
	endif

	var corpse_name := corpse.desc;
	if ( !corpse_name["[skinned]"] )
		// Add "[skinned]" to the corpse description.
		SetName(corpse, corpse_name+" [skinned]");
	endif

	//Store the serial of who skinned the corpse.
	SetObjProperty(corpse, "Skinned", serial);
endfunction

exported function IsSkinned(corpse)
	return CInt(GetObjProperty(corpse, "Skinned"));
endfunction

exported function MakeRemains(corpse)
	if ( !corpse.IsA(POLCLASS_CORPSE) )
		return error{"errortext":="Object is not a corpse."};
	endif
	
	var remains := CreateItemAtLocation(corpse.x, corpse.y, corpse.z, "CorpseRemains", 1, corpse.realm);
	if ( remains.errortext )
		return remains;
	endif
	
	foreach item in ( corpse )
		if ( item.container != corpse )
			continue;
		endif
		
		MoveItemToContainer(item, remains, item.x, item.y);
	endforeach
	
	var owner := IsPlayerCorpse(corpse);
	if ( owner )
		remains.SetOwner(owner);
	endif
	
	return remains;
endfunction

exported function Gibbify(corpse, range:=10)
	var piece_list := array
	{
		0x1DAD, //Torso
		0x1DB2, //Left Leg
		0x1DB1, //Right Leg
		0x1DB0, //Left Arm
		0x1DAF, //Right Arm
		0x1CEE, //Liver
		0x1CED, //Heart
		0x1CF0  //Brain
	};
	
	foreach objtype in (piece_list)
		var item := CreateItemAtLocation(corpse.x, corpse.y, corpse.z, objtype, 1);
		
		var newx, newy;
		var num_tries := 0;

		MOVE_LOOP:
		repeat
			newx := RandomInt(range)-CInt(range/2);
			newy := RandomInt(range)-CInt(range/2);

			newx := newx+corpse.x;
			newy := newy+corpse.y;

			num_tries := num_tries+1;
			if ( num_tries > 30 )
				num_tries := 0;
				newx := corpse.x;
				newy := corpse.y;
				break MOVE_LOOP;
			endif
		until ( CheckLosAt(corpse, newx, newy, corpse.z) );
		
		MoveItemToLocation(item, newx, newy, corpse.z, MOVEITEM_FORCELOCATION);
	endforeach
	
	DestroyItem(corpse);
	
	return 1;
endfunction